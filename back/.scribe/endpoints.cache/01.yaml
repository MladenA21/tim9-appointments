## Autogenerated by Scribe. DO NOT MODIFY.

name: Reservations
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/organization/{id}/days-and-time'
    metadata:
      groupName: Reservations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get allowed days and work hours for booking for specific organization'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the organization.'
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: est
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Da68dkcP316Eb5aeZghf4vV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/organization/{id}/reservations'
    metadata:
      groupName: Reservations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all the reservations from the requested organization'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the organization.'
        required: true
        example: quidem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: quidem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4dDc5a1Vh68Pegk6aZ3vbfE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/organization/{id}/reservations/{reservation_id}'
    metadata:
      groupName: Reservations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete the reservation'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the organization.'
        required: true
        example: nesciunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      reservation_id:
        name: reservation_id
        description: 'The ID of the reservation.'
        required: true
        example: eligendi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: nesciunt
      reservation_id: eligendi
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 86ve41DEabZfhdaPkc53gV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/reserve
    metadata:
      groupName: Reservations
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Make a reservation'
      description: |-
        This route has an extra layer of validation.
        1. Validates if the date is in the future.
        2. Validates if the datetime passed is in coordination with the days and work hours provided from the organization.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      organization:
        name: organization
        description: ''
        required: true
        example: distinctio
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      dateTime:
        name: dateTime
        description: 'Must be a valid date.'
        required: true
        example: '2024-05-02T22:53:39'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      organization: distinctio
      dateTime: '2024-05-02T22:53:39'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Zga83hkfEv5Vb4ad6cPD6e1'
    controller: null
    method: null
    route: null
    custom: []
